---

# TODO: Check pre-requisites. Docker, docker-py, and openssl should be installed.

  - include: certificate.yml
    when: "'docker_registry' in group_names"

  - name: Run Docker Registry in a container
    docker_container:
      image: "registry:2"
      name: registry
      ports:
        - "{{ registry_port }}:5000"
      env:
        REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /registry
        REGISTRY_HTTP_TLS_CERTIFICATE: /certs/{{ cert_name }}.crt
        REGISTRY_HTTP_TLS_KEY: "/certs/{{ cert_name }}.key"
      volumes:
        - "{{ host_registry_path }}:/registry:rw"
        - "{{ remote_cert_path }}:/certs"
      privileged: yes
      state: started
      restart: yes
      pull: false
      restart_policy: always
    register: start_registry
    when: "inventory_hostname == groups['docker_registry'][0]"
    become: true

  - name: Declare the IP address of the first Registry as a fact
    set_fact:
      docker_registry_ip: "{{ hostvars[inventory_hostname]['ansible_' + registry_interface]['ipv4']['address'] }}"
    when: "inventory_hostname == groups['docker_registry'][0]"

  - name: Distribute the fact containing IP address of the first Registry
    set_fact:
      docker_registry_ip: "{{hostvars[groups['docker_registry'][0]]['docker_registry_ip'] }}"
    when: "inventory_hostname != groups['docker_registry'][0]"

  - name: Entry registry_name shortcut in /etc/hosts
    lineinfile:
      dest: "/etc/hosts"
      line: "{{ docker_registry_ip }}  {{ registry_name }}"
    become: true

  - name: Copy certificates to the client nodes
    copy:
      src: "{{local_cert_path}}/{{cert_name}}.crt"
      dest: "/etc/docker/certs.d/{{ registry_name }}:{{ registry_port}}/"
    become: true



