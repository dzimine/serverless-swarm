
version: '2.0'

pipeline.wordcount:
  description: "See ../wordcount.yaml"
  vars:
    mounts:
      - "type=bind,source=<% $.share_on_host %>,target=<% $.share_in_docker %>"
  input:
    - input_file
    - result_file
    - share_on_host
    - share_in_docker
    - parallels
    - delay

  task-defaults:
    on-error:
        - fail
  output:
    context: <% $ %>
  tasks:
    split:
      action: pipeline.run_job
      input:
        image: st2.my.dev:5000/split
        args:
            - "<% $.input_file %>"
            - "<% $.parallels %>"
            - <% $.share_in_docker %>/out
        mounts: <% $.mounts %>
        name: split
      on-success: map

    map:
      with-items: i in <% list(range(1, 1 + $.parallels)) %>
      # concurrency: 4
      action: pipeline.run_job
      input:
        image: st2.my.dev:5000/map
        args:
          - "<% $.share_in_docker %>/out.<% $.i %>"
          - "<% $.share_in_docker %>/out.map.<% $.i %>"
          - <% $.delay %>
        mounts: <% $.mounts %>
        name: map
      on-success: combine_map_results

    combine_map_results:
      action: core.local_sudo
      input:
        cmd: cat out.map.* > map.out
        cwd: <% $.share_on_host %>
      on-success: reduce

    reduce:
      action: pipeline.run_job
      input:
        image: st2.my.dev:5000/reduce
        args:
          - <% $.share_in_docker %>/map.out
          - <% $.result_file %>
          - <% $.delay %>
        mounts: <% $.mounts %>
        name: reduce
