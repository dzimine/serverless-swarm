
version: '2.0'

pipeline.findgenesb:
  description: "See ../findgenesb.yaml"
  vars:
    fgenesb_res_file: /share/fgenesb.res # in container
    tempfile_prefix: out
    mounts:
      - "type=bind,source=<% $.share_host %>/findgenesb.<% env().st2_execution_id %>,target=<% $.share_docker %>"
      - "type=bind,source=<% $.share_data_host %>,target=<% $.share_data_docker %>,readonly"
    workdir_host: <% $.share_host %>/findgenesb.<% env().st2_execution_id %>

  input:
    - input_file
    - min_len
    - database_path
    - result_filename
    - email
    - share_host
    - share_docker
    - share_data_host
    - share_data_docker
    - parallels
    - delay

  task-defaults:
    on-error:
        - fail
  output:
    context: <% $ %>
  tasks:

    setup_working_directory:
      action: core.local_sudo
      input:
        cmd: mkdir -p <% $.workdir_host %> && cp <% $.input_file %> <% $.workdir_host %> && ls <% $.workdir_host %>
      publish:
        input_file_name: <% task(setup_working_directory).result.stdout %>
      on-success:
        - find_genes_proteins_and_etc

    find_genes_proteins_and_etc:
      action: pipeline.run_job
      input:
        image: st2.my.dev:5000/fgenesb
        args:
            - "<% $.share_docker %>/<% $.input_file_name %>"
            - "<% $.fgenesb_res_file %>"
            - <% str($.min_len) %>
        mounts: <% $.mounts %>
        name: fgenesb
      on-success:
        - prepare_to_blast

    prepare_to_blast:
      action: pipeline.run_job
      input:
        image: st2.my.dev:5000/sb_base
        args:
          - "/bin/bash"
          - "-c"
          - >
              /sb/blast_scripts/fgenesb_get_proteins.pl
              <% $.fgenesb_res_file %> > <% $.share_docker %>/prot2blast.0 ;
              /sb/extra/seqsplit.py
              <% $.share_docker %>/prot2blast.0
              <% $.share_docker %>/<% $.tempfile_prefix %> <% $.parallels %> ;
              ls <% $.share_docker %>/<% $.tempfile_prefix %>*
        mounts: <% $.mounts %>
        name: preblast
      on-success:
        - blast

    blast:
      with-items: i in <% list(range(1, 1 + $.parallels)) %>
      # concurrency: 4
      action: pipeline.run_job
      input:
        image: st2.my.dev:5000/blast_fb
        args:
          - "<% $.share_docker %>/<% $.tempfile_prefix %>.<% $.i %>"
          - "/sb/DATA/<% $.database_path %>"
          - "<% $.share_docker %>/<% $.tempfile_prefix %>.blast.<% $.i %>"
          - "/sb/blast-2.2.26/bin/blastpgp"
          - "1e-10"
          - "2"
        mounts: <% $.mounts %>
        name: blast
        timeout: 14400 # 4 hours
      on-success:
        - combine_blast_results

    combine_blast_results:
      action: core.local_sudo
      input:
        cmd: cat <% $.tempfile_prefix %>.blast.* > <% $.tempfile_prefix %>.final
        cwd: <% $.workdir_host %>
      on-success:
        - build_final_result

    build_final_result:
      action: pipeline.run_job
      input:
        image: st2.my.dev:5000/fgenesb_out
        args:
          - <% $.fgenesb_res_file %>
          - <% $.share_docker %>/<% $.tempfile_prefix %>.final
          - <% $.share_docker %>/<% $.result_filename %>
        mounts: <% $.mounts %>
        name: preres
      publish:
        result_file: <% $.share_docker %>/<% $.result_filename %>
      on-success:
        - pretty_graphics_cgview

    pretty_graphics_cgview:
      action: pipeline.run_job
      input:
        image: st2.my.dev:5000/cgview
        args:
          - <% $.result_file %>
          - <% $.result_filename %>
          - <% $.share_docker %>
        mounts: <% $.mounts %>
        name: cgview
      on-success:
        - email_resutls: <% $.email != None %>

    email_resutls:
      action: core.sendmail
      input:
        to: <% $.email %>
        subject: "Your annotated sequence findgenesb.<% env().st2_execution_id %>"
        body: "Enjoy your annotated sequence. Love, Esty Tew."
        attachments: <% $.workdir_host %>/<% $.result_filename %>.png,<% $.workdir_host %>/<% $.result_filename %>

